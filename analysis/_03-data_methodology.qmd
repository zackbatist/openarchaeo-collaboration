# Methods & Materials <!-- Methods & Materials -->
<!-- TODO: snappier title? Maybe incoroporating 'open-archaeo'? -->

Our study comprises an exploratory analysis of open-archaeo, a list of open source archaeological software and other digital resources. As of right now it includes 408 items, which are rendered for the web at [open-archaeo.info](open-archaeo.info). We compiled the dataset by browsing collaborative software development platforms such as GitHub, GitLab and Codeberg, and by tracing connections to other personal, professional, and institutional websites that describe and host additional archaeological software. This entailed manually crawling through users' profiles, particularly those who identify as archaeologists or who have contributed to tools that pertain to archaeological work. We supplemented this quasi-systematic collection strategy with word-of-mouth contributions made by interested individuals who identified relevant work that we initially overlooked.

Open-archaeo is a relatively comprehensive list, however it generally overlooks records pertaining to code written before archaeologists started using collaborative software development platforms such as GitHub. It also lacks references to code that is not available on the web. Open-archaeo is also limited by the experiences of its primary maintainers, and we welcome anyone, especially domain specialists who are familiar with the kinds of tools commonly used in their specific fields, to contribute.

```{r data-oarch}
read_csv("https://raw.githubusercontent.com/zackbatist/open-archaeo/master/open-archaeo.csv") %>%
  mutate(category = na_if(category, "?")) ->
  oarch

# Extract clean repos from GitHub URLs
oarch %>%
  mutate(
    gh_repo = str_match(oarch$github, "^https://github.com/([\\w-\\.]+/[\\w-\\.]+)/?.*?$")[,2]
  ) ->
  oarch

# Amalgamate categories into fewer rough categories
# TODO: redo
oarch <- mutate(oarch, rough_category = recode(category,
                                 "R" = "Packages (R, Python, etc.)",
                                 "Web apps" = "Standalone apps",
                                 "Datasets" = "Analyses & datasets",
                                 "Tutorials" = "Lists & tutorials",
                                 "Python" = "Packages (R, Python, etc.)",
                                 "Desktop apps" = "Standalone apps",
                                 "QGIS" = "Plugins",
                                 "Lists" = "Lists & tutorials",
                                 "Mobile apps" = "Standalone apps",
                                 "Analyses" = "Analyses & datasets",
                                 "Spreadsheets" = "Forms & spreadsheets",
                                 "Command line tools" = "Standalone apps",
                                 "Plugins" = "Plugins",
                                 "ArcGis" = "Plugins",
                                 "Filemaker" = "Plugins",
                                 "ODK" = "Forms & spreadsheets",
                                 "Lisp" = "Packages (R, Python, etc.)",
                                 .default = "Other",
                                 .missing = "Other"
                                 ))
```

For the purpose of this study, we augmented the core open-archaeo dataset with data obtained from GitHub's public API. That is, for each project in open-archaeo with a GitHub repository, we added information on individual contributors, commits, issues, etc. from the API using the R package `gh` [@gh]. This does reduce our sample size slightly; about an eighth of projects don't use version control, at least not publicly, but amongst those that do, GitHub is by far the most popular host ([@tbl-repo-hosts]).

```{r data-github}
# If cached data at `analysis/data/derived_data/oarch.RData` is present, this
# chunk will prefer to load it rather than make requests to the GitHub API.
# Delete this file to fetch fresh data from the GitHub or modify 
# `cached_gh_data` to read a different cached version.
#
# Note that fetching data from the GitHub API takes some time and is subject to
# a rate limit:
# <https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting>
#
# You will need to authenticate authenticate with GitHub credentials to get a
# rate limit sufficient to obtain the required data, see 
# <https://gh.r-lib.org/articles/managing-personal-access-tokens.html>
# for options on how to do this.
cached_gh_data <- here("analysis/data/derived_data/oarch.RData")
if (!file_exists(cached_gh_data)) {
  oarch <- mutate(oarch,
                  gh_langs = map(oarch$gh_repo, gh_lang),
                  gh_contribs = map(oarch$gh_repo, gh_contrib),
                  gh_issues = map(oarch$gh_repo, gh_issue),
                  gh_comments = map(oarch$gh_repo, gh_comment),
                  gh_commits = map(oarch$gh_repo, gh_commit)
  )
  saveRDS(oarch, cached_gh_data)
}
oarch <- readRDS(cached_gh_data)
```

```{r tbl-repo-hosts}
#| tbl-cap: Number of open archaeology projects using GitHub and other repository hosts
oarch |>
  mutate(none = ifelse(is.na(github) & is.na(gitlab) & is.na(bitbucket) &
                         is.na(launchpad) & is.na(codeberg), "", NA)) |>
  pivot_longer(c(github, gitlab, bitbucket, launchpad, codeberg, none),
               names_to = "repo_host", values_to = "repo_url") |>
  drop_na(repo_url) |>
  count(category, repo_host) |>
  pivot_wider(names_from = category, values_from = n, values_fill = 0) |>
  mutate(total = rowSums(across(Guides:`Standalone software`)), 
         .before = Guides) |>
  arrange(repo_host == "none", desc(total)) |>
  mutate(repo_host = recode(repo_host,
                            github = "GitHub",
                            codeberg = "Codeberg",
                            gitlab = "GitLab",
                            bitbucket = "BitBucket",
                            launchpad = "Launchpad",
                            none = "None")) |>
  gt() |>
  cols_label(repo_host = "Host", total = "Total") |>
  tab_spanner("By category", Guides:`Standalone software`)
```

While our initial intention was to only list open source software, open-archaeo's scope has expanded to include all software created by and for archaeologists. We found that many repositories do not explicitly denote an open source license, or any license at all.

**NOTE:** Add a breakdown on licensing practices.

The data and analysis code are available in our research compendium on GitHub, which is also indexed on Zenodo.

# Conclusion

Our goal in this study was to investigate the under-explored research practices involved in research software engineering in archaeology.
We sought to identify not only _what_ kinds of software archaeologists are making, but _how_ archaeologists create these tools as part of a broader community of practice. 
Our emphasis on the collaborative experiences involved in open source software development emerged from our experience maintaining open-archaeo, through which we observed that making one's code openly available on the web does not necessarily garner the benefits often touted by open science advocates, namely that source code can be audited, forked, and appropriated for alternative use cases, which are effectively social and collaborative experiences.

To investigate these concerns, we operationalised open-source collaborative experiences as the use of certain features of git and GitHub visible to us in data from the GitHub API. 
With this data, we documented that open source software development in archaeology has seen a rapid and sustained rise beginning around 2014 (@fig-github-cumulative). 
This is marked by a variety of applications and use cases, including the use of git and GitHub to track and host content other than code. 
Moreover, archaeologists are very involved in broader scripting ecosystems, as is evident through the predominant creation of R packages and Python libraries designed to process the rich variety of archaeological information. 
At the same time, archaeologists also create standalone software for more intensive tasks that require greater access to system resources or that warrant more complex user interfaces than what R and Python IDEs are capable of providing.
These tools tends to be focused on various means of identifying distribution patterns (spatial, temporal, statistical), calibrating data obtained from various instrumental methods (XRF, luminescence dating), supporting specialized finds analysis (zooarchaeology, palaeobotany, archaeogenetics), and supporting the collection and processing of archaeological materials.
These foci signify gaps in the archaeological toolbox that archaeologists recognized, and have attempted to fill, on their own terms.

There is an emerging community of practice around open source research software in archaeology. 
All but a handful of the GitHub repositories we analysed have more than commit, showing that archaeologists use it for ongoing work rather than merely to upload finished products.
They relatively frequently make use of the 'star' and 'comment' features to engage with others' repositories (@fig-collab-features) and, via these and other shared contributions, we can trace a collaborative network that includes the majority of archaeologists active on GitHub (see @sec-network).

On the other hand, we found that the forms and intensity of collaboration remains limited.
Most work is performed individually (@fig-contributions) and is short-lived (@fig-lifespan; @fig-lifespan-rate). 
The vast majority of repositories have 1--3 contributors, with only a few distinguished by an active and diverse developer base. 
Our analysis also shows an uneven use of git and GitHub's extended features, beyond their basic usage as a version control system and repository host. 
While GitHub's more passive collaborative features (stars, comments) are commonly used, those that involve direct engagement with repository content (issues, forks, pull requests) are not (@fig-collab-features); 
perhaps because people do not want to 'step on toes' or be seen to be intruding on others' projects. 
This may relate to the fact that most developers on this list are academics who hold different values relative to the designers of open source development environments, regarding how collaboration should occur, for example, when dealing with how projects and ideas are 'owned' by individuals or communities, and how work should be iteratively improved upon.

Our network analysis (@sec-network) similarly draws attention to the real-world collaborative ties that underpin archaeological open source software development.
We identify a core cluster representing a series of collaborative ties among members of an archaeological software engineering community of practice.
This core exhibits complexity that corresponds with social patterns, such as the presence of various clusters representing interconnected interest or affinity groups.
Indeed, we have found that 'real-world' social connections and institutional support structures are strong predictors of centrality, since these clusters are representative of established professional partnerships.
This suggests that archaeological open source is firmly embedded within existing power structures that permeate academic life, both online and offline.
Similarly, we found that the individuals who play critical roles in supporting the archaeological open source community are precariously employed workers. 
Far from open source being inherently distributed, resilient, and open-ended, this indicates that research software engineering is actually quite centralized, fragile, and based heavily on existing professional connections and endeavours.

These findings call into question the notion that archaeologists benefit from the positive outcomes that are commonly argued to be the natural results of open source development models -- namely, greater degrees of extensibility and participatory action.
While opening the source code may facilitate these positive outcomes as necessary preconditional factors, we argue that this only amounts to establishing the _potential_ for people to put these values into practice. 
Moreover, we argue that the objectives and circumstances that frame archaeological practice significantly influence how far archaeologists (and academics in general) are willing to push for these values, and limit the ability for archaeologists to do open source in ways that resemble more mainstream open source projects.
For instance, successful open source projects like the Linux kernel, openSSL, or the Firefox web browser are driven by collective and popular interest in ensuring that code remains functional, and the code base is therefore constantly in flux and bears an accumulating list of contributing members.
This differs from the organizational principles that govern much archaeological work, namely where a director or directors (of a field project, research group, etc.) sets the goals and orientation of the group and commissions and manages other actors accordingly. 
Moreover, archaeological projects ultimately seek to produce stable textual outcomes bearing clear delineation of authorship and that require no upkeep whatsoever. 
Sustaining an open source project is simply not compatible with the factors that currently drive the momentum behind archaeological work.

As such, we advocate for more focused attention on specific disciplinary norms and institutional support structures that inform how knowledge is created and validated, and how varied contributions to the scholarly enterprise are mediated, credited, and valued. 
These factors, which are often ignored in open science discourse, vary from discipline to discipline and are rarely accounted for in the infrastructures themselves and in the policies that dictate or guide their implementation. 
However these factors should be considered as equal, if not more important, elements contributing to the success of open science, relative to the technical apparatus.

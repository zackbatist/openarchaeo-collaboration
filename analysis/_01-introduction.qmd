Open archaeology constitutes a series of practices and principles in support greater transparency and access to research processes and outputs. The open science movement operates in various domains of research operations, such as publishing, data-sharing, and education, and continues to expand its reach into the arenas of bibliographic metadata, review processes, and grantsmanship. While these venues for transformation represent relatively novel ways of doing research, academic ventures into open source is more complicated. The open source movement has its own distinct history and developed out of pressures and circumstances beyond those in which the open science movement operates. However, the open source movement directly inspires many aspects of open science, and, crucially, informs how the open science movement has operationalized itself. For instance, the open science movement relies on infrastructures and protocols that closely resemble systems and processes designed to develop open source software (e.g., the use of plaintext, diffs, emphasis on formal licencing, the whole hacker aesthetic). But academic open source is distinct from open source that underlies massive projects that literally run the internet (and by extension the global economy), such as the Linux kernel, the Firefox web browser, and openSSL. While they may use similar tools and technical protocols, they are governed by different social and professional pressures. In other words, making your code open source has different meanings, impacts and implications for archaeologists and professional software developers.

This is also complicated by the kind of rhetoric about academic open source that, based on our personal experiences, is discordant with how academics actually _do_ open source. Is open source actually making research processes more transparent and improve research outcomes? Is it actually boosting efficiency by establishing a common store of knowledge and productive code? Is it actually helping to foster new globe-spanning connections and lead to novel research trajectories that would not otherwise come to pass? These outcomes are not a given. They only actually arise in contexts where participants adhere to and are motivated by warrants, professional norms, and governance strategies that encourage these results. Beyond simply making their code available on the web, do archaeologists also implement social strategies to advance open source ideals? Does archaeological open source actually help achieve greater transparency, sustainability, and community participation? And if not, what does it actually achieve?

This article presents a survey of archaeological software development with two goals in mind:

(1) we identify *what* kinds of software archaeologists are making;
(2) and evaluate *how* archaeologists create these tools, with particular emphasis on practices of collaboration.

Our investigation considers how archaeological software development may be benefiting from or missing out on the affordances that open source development models-- specifically, the value added through working as part of a broader community of invested stakeholders, processes of iterative improvement, and increased code transparency.
